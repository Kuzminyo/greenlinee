@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.woff2") format(".woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Bold.woff2") format(".woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #ffffff;
  --color-dark: #1f2937;
  --color-gray: #a6adbb;
  --color-accent: #25A25A;
  --font-family-base: "Roboto", sans-serif;
  --container-width: 87.5rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 80rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  display: flex;
  flex-direction: column;
  font-size: 1rem;
  font-family: var(--font-family-base);
  color: var(--color-dark);
}

main {
  flex-grow: 1;
}

h1,
.h1 {
  color: var(--color-light);
  font-weight: 400;
}

h2,
.h2 {
  color: var(--color-dark);
  font-weight: 700;
}

h1,
.h1 {
  font-size: clamp(1.875rem, 1.2058823529rem + 2.7450980392vw, 4.5rem);
}

h2,
.h2 {
  font-size: clamp(1.75rem, 1.431372549rem + 1.3071895425vw, 3rem);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  aspect-ratio: 1;
  content: "";
}

.logo {
  max-width: clamp(9.1875rem, 8.3431372549rem + 3.4640522876vw, 12.5rem);
  max-height: clamp(2rem, 1.8406862745rem + 0.6535947712vw, 2.625rem);
}

.button {
  display: inline-flex;
  justify-content: center;
  padding: 1rem 1rem;
  font-size: 1rem;
  font-weight: 700;
  color: var(--color-dark);
  white-space: nowrap;
  background-color: #f2f2f2;
  border: none;
  border-radius: 1.5625rem;
}
@media (width <= 90.06125rem) {
  .button {
    padding: 0.75rem 0.75rem;
    font-size: 0.875rem;
  }
}
@media (any-hover: hover) {
  .button:hover {
    background-color: #d3d3d3;
  }
}
@media (any-hover: none) {
  .button:active {
    background-color: #d3d3d3;
  }
}

.burger-button {
  width: 2.125rem;
  aspect-ratio: 1;
  display: inline-flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.53125rem 0.265625rem;
  color: var(--color-dark);
  background-color: transparent;
  border: none;
  z-index: 3;
}
@media (any-hover: hover) {
  .burger-button:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    color: var(--color-accent);
  }
}
.burger-button.is-active .burger-button__line:first-child {
  rotate: 45deg;
  transform-origin: 0;
  translate: 0.25em -0.1em;
}
.burger-button.is-active .burger-button__line:nth-child(2) {
  rotate: -45deg;
}
.burger-button.is-active .burger-button__line:last-child {
  width: 0;
}
.burger-button__line {
  width: 100%;
  height: 0.125rem;
  background-color: currentColor;
  border-radius: 1rem;
  transition-duration: var(--transition-duration);
}
.burger-button__line:last-child {
  align-self: end;
  width: 55%;
}

html.is-dark-theme body {
  background-color: var(--color-dark);
  color: var(--color-light);
}
html.is-dark-theme h1,
html.is-dark-theme h2,
html.is-dark-theme h3,
html.is-dark-theme h4,
html.is-dark-theme h5,
html.is-dark-theme h6 {
  color: var(--color-light);
}
html.is-dark-theme .button {
  background-color: #141b24;
  color: var(--color-light);
}
@media (any-hover: hover) {
  html.is-dark-theme .button:hover {
    background-color: #11161e;
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  html.is-dark-theme .button:active {
    background-color: #11161e;
    color: var(--color-accent);
  }
}
html.is-dark-theme .header__switch-theme {
  filter: brightness(0) invert(1);
}
html.is-dark-theme .burger-button__line {
  background-color: var(--color-light);
}

.modal {
  position: fixed;
  z-index: 4;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.4);
}
.modal:not(.is-active) {
  opacity: 0;
  visibility: hidden;
  translate: 100%;
}
.modal__content {
  background-color: var(--color-light);
  margin: auto;
  padding: 1.25rem;
  border-radius: 1.25rem;
  width: 35%;
}
@media (width <= 47.99875rem) {
  .modal__content {
    width: 70%;
  }
}
.modal__close-button {
  background-color: var(--color-light);
  float: right;
  border: none;
}
.modal__close-button-cross {
  color: var(--color-gray);
  font-size: 1.75rem;
  font-weight: 700;
  transition-duration: var(--transition-duration);
}
@media (any-hover: hover) {
  .modal__close-button-cross:hover {
    color: var(--color-dark);
    text-decoration: none;
    cursor: pointer;
  }
}
@media (any-hover: none) {
  .modal__close-button-cross:active {
    color: var(--color-dark);
    text-decoration: none;
    cursor: pointer;
  }
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.field {
  display: flex;
  flex-direction: column;
}
.field__label {
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #333;
}
.field__control {
  padding: 0.75rem;
  font-size: 1rem;
  border: 1px solid #ccc;
  border-radius: 0.5rem;
  transition: border-color 0.2s;
}
.field__control:focus {
  border-color: #007bff;
  outline: none;
}
.field__errors {
  color: #d00;
  font-size: 0.875rem;
  margin-top: 0.25rem;
  min-height: 1em;
}

.header__body {
  padding: 0.5rem 0.9375rem;
}
.header__body-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 1rem;
}
@media (width > 47.99875rem) {
  .header__overlay {
    display: contents;
  }
}
@media (width <= 47.99875rem) {
  .header__overlay {
    position: fixed;
    inset: 0;
    background-color: var(--color-accent);
    display: flex;
    flex-direction: column;
    justify-content: center;
    row-gap: 3rem;
    padding: 1rem;
    transition-duration: var(--transition-duration);
    z-index: 3;
  }
  .header__overlay:not(.is-active) {
    opacity: 0;
    visibility: hidden;
    translate: 100%;
  }
}
@media (width <= 47.99875rem) {
  .header__menu {
    overflow-y: auto;
  }
}
.header__menu-list {
  display: flex;
  align-items: center;
  column-gap: 1rem;
}
@media (width <= 90.06125rem) {
  .header__menu-list {
    column-gap: 0.5rem;
  }
}
@media (width <= 47.99875rem) {
  .header__menu-list {
    flex-direction: column;
    row-gap: 1rem;
  }
}
.header__menu-link {
  padding-inline: 1.25rem;
  font-weight: 400;
}
.header__actions {
  display: flex;
  align-items: center;
  column-gap: 0.5rem;
}
@media (width <= 47.99875rem) {
  .header__actions {
    justify-content: center;
    flex-direction: column-reverse;
    row-gap: 1.25rem;
  }
}
.header__switch-theme {
  max-width: 100%;
  border: none;
  background-color: inherit;
}

.hero {
  position: relative;
  background-image: url("../images/hero/bg.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}
.hero::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(31, 41, 55, 0.8);
  z-index: 1;
}
.hero__body {
  position: relative;
  z-index: 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 2.5rem;
}
.hero__body:nth-child(odd) {
  color: var(--color-gray);
  font-family: monospace;
}
.hero__subtitle {
  font-size: clamp(1rem, 0.9362745098rem + 0.2614379085vw, 1.25rem);
  text-transform: uppercase;
}
.hero__title {
  border: 3px solid;
  padding: 2.5rem;
}
@media (width <= 63.99875rem) {
  .hero__title {
    padding: 1.875rem;
    border-width: 2px;
  }
}

.section {
  min-height: 100vh;
  display: flex;
  align-items: center;
}
@media (width <= 63.99875rem) {
  .section {
    padding-block: 1.875rem;
  }
}
.section-inner {
  display: flex;
}
@media (width <= 63.99875rem) {
  .section-inner {
    flex-direction: column-reverse;
    justify-content: center;
    align-items: center;
  }
}
.section__title {
  padding-bottom: 1.25rem;
}
.section__image {
  border-radius: 0.9375rem;
}

.footer {
  background-color: var(--color-accent);
}
.footer-inner {
  display: flex;
  row-gap: 3.125rem;
  flex-direction: column;
  align-items: flex-start;
  padding-block: 3.125rem;
}
.footer__menu-list {
  display: flex;
  flex-direction: column;
  row-gap: 0.9375rem;
}
.footer__menu-link {
  color: var(--color-light);
  font-weight: 700;
}
@media (any-hover: hover) {
  .footer__menu-link:hover {
    color: var(--color-light);
    text-decoration: underline;
  }
}
@media (any-hover: none) {
  .footer__menu-link:active {
    color: var(--color-light);
    text-decoration: underline;
  }
}

/*# sourceMappingURL=main.css.map */
